CREATE TABLE film 
( 
id_film NUMERIC,
titre VARCHAR(50),
duree NUMERIC,
annee NUMERIC(4),
notes_site NUMERIC,
notes_util NUMERIC,
resume LONG,
commentaire XMLTYPE,
affiche varchar(200),
constraint pkf primary key (id_film)
)


create table personne
(
id_pers numeric,
nom_pers varchar(50),
prenom_pers varchar(50),
constraint pkp primary key (id_pers)
)

create table genre
(
id_genre numeric,
nom_genre varchar(25),
constraint pkg primary key (id_genre)
)

create table jouer
(
id_film numeric,
id_pers numeric,
constraint pkj primary key (id_film,id_pers),
constraint fkj1 foreign key (id_film) references film(id_film),
constraint fkj2 foreign key (id_Pers) references personne(id_pers)
)

create table realiser
(
id_film numeric,
id_pers numeric,
constraint pkr primary key (id_film,id_pers),
constraint fkr1 foreign key (id_film) references film(id_film),
constraint fkr2 foreign key (id_Pers) references personne(id_pers)
)

create table est
(
id_film numeric,
id_genre numeric,
constraint pke primary key (id_film,id_genre),
constraint fke1 foreign key (id_film) references film(id_film),
constraint fke2 foreign key (id_genre) references genre(id_genre)
)
/

INSERT INTO film
VALUES ( 0001, 'top gun', 123, 1995, 5, 4 ,'des avions et une histoire d amour',XMLType('
<film> 
    <commentaire>
	<pseudo>juju</pseudo>
	<com>super film j adore les avions !!!!</com>
	<note>6</note>
	<source>Allocine</source>
    </commentaire>
</film>'))

INSERT INTO film
VALUES ( 0002, 'slevin', 108, 2006, 8 ,6 ,'deux clan un endettés',XMLType('
<film> 
    <commentaire>
	<pseudo>bro_du_52</pseudo>
	<com>trés bon film avec M. Willis</com>
	<note>8</note>
	<source>Allocine</source>
    </commentaire>
</film>') )

INSERT INTO film
VALUES ( 6, 'gran torino', 138, 2010, 9 ,9.5 ,'clint a la retraite...',XMLType('
<film> 
    <commentaire>
	<pseudo>ford_48</pseudo>
	<com>trés bon film avec M. Eastwood</com>
	<note>10</note>
	<source>Allocine</source>
    </commentaire>
    <commentaire>
	<pseudo>jojodu12</pseudo>
	<com>Clint encore une fois énorme !!</com>
	<note>8</note>
	<source>Allocine</source>
    </commentaire>
</film>'),'' )



insert into personne
values (0001, 'cruise', 'tom')

insert into personne
values (0002, 'eastwood','clint')

insert into personne
values (0003, 'bruce', 'willis')

insert into genre
values (0001, 'policier')

insert into genre
values (0002, 'action')


insert into est
values (0001,0002)

insert into est
values (0002,0001)

insert into jouer
values (0001,0001)

insert into jouer
values (0002,0003)


///vue et trigger///

create or replace view vuefilm (id_film, titre, duree, annee, notes_site, notes_util, resume, pseudo, com, note, source, affiche, nbcom)
as select id_film, titre, duree, annee, notes_sites, notes_util, resume, f.commentaire.extract('/film/commentaire/pseudo/text()').getStringVal(), f.commentaire.extract('/film/commentaire/com/text()').getStringVal(), f.commentaire.extract('/film/commentaire/note/text()').getStringVal(), f.commentaire.extract('/film/commentaire/source/text()').getStringVal(), affiche, count(f.commentaire.extract('/film/commentaire'))
from film f


CREATE OR REPLACE TRIGGER moyenne
AFTER INSERT OR UPDATE ON film
FOR EACH ROW
	BEGIN
		NEW.notes_util := (SELECT AVG(extract(value(note),'note/text()').getNumberVal())
				FROM film f,
 				table(xmlsequence(extract(f.commentaire,'/film/commentaire/note'))) AS note
				WHERE id_film = NEW.id_film)
		WHERE id_film = NEW.id_film
	END;
END moyenne;
/

SELECT 
  f.commentaire.extract('/film/commentaire/com/text()').getStringVal()
FROM film f; 


//moyenne
 select AVG(extract(value(note),'note/text()').getNumberVal()) moyenne
from film f,
 table(xmlsequence(extract(f.commentaire,'/film/commentaire/note'))) note
where id_film = 5
